# DESCRIPTION:
# Builds, tests and packages the solution for the CI build configuration.
name: $(SourceBranchName)-$(Date:yyyyMMdd)$(Rev:-r)

variables:
- template: aks-variables.yml
- group: DICOM-DEV
- name: imageTag
  value: $[coalesce(variables['specificTag'], variables['build.buildnumber'])]

trigger:
  branches:
    include:
    - master

pr: none

stages:
- stage: PublishContainer
  displayName: 'Publish Docker CI Container'
  jobs:
  - job: 'Docker'
    condition: eq(variables['specificTag'], '')
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - template: ../jobs/docker-build-push.yml
      parameters: 
        version: "Stu3"
        tag: $(imageTag)

- stage: AKSDeploy
  displayName: Deploy to AKS
  jobs:
  - template: ../jobs/helm-deploy.yml
    parameters:
      name: deploy_fhir
      displayName: Deploy FHIR
      environmentName: DICOM-DEV.dicom
      logicalEnvironment: DEV
      chartPath: 'samples/kubernetes/helm/fhir-server'
      releaseName: 'fhir'
      overrideValues: 'image.tag=$(imageTag),database.sql.existing.serverName=tcp:$(SQLServerName).database.windows.net,database.sql.existing.databaseName=$(SQLDbName);database.sql.existing.username=$(SQLUsername);database.sql.existing.password=$(SQLServerPassword)'
      valueFile: 'build/aks/values.yml'
      preDeploySteps:
      - task: AzureCLI@2
        displayName: Get connection strings
        inputs:
          azureSubscription: $(azureSubscriptionName)
          scriptType: bash
          scriptLocation: inlineScript
          failOnStandardError: true
          inlineScript: |
            export sqlConStr="Server=tcp:$(SQLServerName).database.windows.net,1433;Database=$(SQLDbName);User ID=$(SQLUsername);Password=$(SQLServerPassword);Encrypt=true;Connection Timeout=30;"
            export blobConStr="$(az storage account show-connection-string -g cd-dicom -n cddicom --query "connectionString" -o tsv)"

            # replace , with \, for helm --set
            echo "##vso[task.setvariable variable=SqlConnectionString]${sqlConStr//[,]/\\,}"
            echo "##vso[task.setvariable variable=BlobConnectionString]${blobConStr//[,]/\\,}"